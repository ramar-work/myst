#!/bin/bash -
# -----------------------------------------------------------------------------
# mystinstall 
# ===========
#
# Summary
# -------
# A utility to help setup Lucee on Linux 
# platforms.
# 
# Author
# ------
# Antonio R. Collins II (rc@tubularmodular.com)
# 
# TODO 
# ---- 
# - Download and install Apache locally for use with Tomcat.  Indeed, this is a 
#   lot of work for one server tool, but it saves time and doesn't rely on the 
#   variety of Linux conventions out there that can make or break a project.
#
# - the above x 2, all problems are solved by managing yourself, and possibly 
#   going so far as to write a unit file with a different name
# 
# -----------------------------------------------------------------------------
NAME=`basename $0`

# const (on Arch anyway)
HTTPD_LIBDIR=/usr/lib/httpd/modules
HTTPD_SRVDIR=/srv/http
HTTPD_CONFDIR=/etc/httpd/conf
SYSTEMD_LIBDIR=/usr/lib/systemd/system
LUCEE_WWW_DOWNLOAD_HOME=https://download.lucee.org
LUCEE_WWW_CHECKSTRING=cdn.lucee.org
LUCEE_PREFIX=/usr/local/lucee
FILE_BASE=$PREFIX/share/myst/mystinstall
TMP_DIR=/var/tmp
CHECK="sed grep wget systemctl httpd"


# unconst
SHARED_KEY=
LUCEE_DLEXT=
VERSION=
VERSION=Linux64
TOMCAT_SHUTDOWN_PORT=8005
TOMCAT_PORT=8888
TOMCAT_AJP_PORT=8009
TOMCAT_SECRET_KEY=
TEST_DOMAIN=
DO_DUMP=0


# err
function err() {
	printf "`basename $0`: $2\n" > /dev/stderr
	exit ${1:-0}
}


# usage message
usage() {
	STATUS="${1:-0}"
cat <<EOF
Usage: `basename $0`

-f, --full-install         Do a full install
-a, --automated-install    Do an automated install
-s, --skip-download        Do not download Lucee
    --install-file <arg>   Choose a file to use installing Lucee 
-e, --version <arg>        Select a version of Lucee to run (if the defaults
		                       aren't what you want).
-u, --user <arg>           Set the user that Lucee should run as
-p, --pass <arg>           Set up a Lucee password
-t, --test-domain <arg>    Supply a domain for testing
-r, --unpriveleged         Try to install with no priveleges
    --prefix <arg>         Use this directory as the prefix for Lucee install.
-v, --verbose              verbose
-h, --help                 help
EOF
	exit $STATUS
}


# Options
DO_DEBUG=0
DO_VERBOSE=0
DO_DOWNLOAD=1
DO_FULL=0
DO_AUTOMATED=0
DO_UNPRIVELEGED=0
LUCEE_VERSION=
LUCEE_USER=
LUCEE_PASS=
TEST_DOMAIN=


# Die with no options
[ $# -eq 0 ] && usage 0


# If I've installed, source a list of things
test -f /etc/myst.conf || {
	printf "`basename $0`: It looks like myst has not been fully installed yet.\n" > /dev/stderr
	printf "Please install it via 'make install' from the myst src directory.\n" > /dev/stderr
	exit 0
}

source /etc/myst.conf
#echo $PREFIX


# Loop to process cl args
while [ $# -gt 0 ]
do
	case "$1" in
		-f|--full-install) # do a full install
			DO_FULL=1
		;;
		-a|--automated-install) # do an automated install
			DO_AUTOMATED=1
		;;
		-s|--skip-download) # skip download
			DO_DOWNLOAD=0
		;;
		-e|--version) # what version?
			LUCEE_VERSION=0
		;;
		-u|--user)  # as user?
			shift
			LUCEE_USER="$1"
		;;
		-p|--pass)  # w/ pass
			shift
			LUCEE_PASS="$1"
		;;
		--prefix)  # w/ pass
			shift
			LUCEE_PREFIX="$1"
		;;
		-t|--test-domain)  # supply a test domain name
			shift
			TEST_DOMAIN="$1"
		;;
		-n|--unpriveleged) # no priveleges
			DO_UNPRIVELEGED=1
		;;
		--dump) # dump 
			DO_DUMP=1
		;;
		-v|--verbose) # verbose
			DO_VERBOSE=1
		;;
		-h|--help) # help
			usage 0	
		;;
		-x)
			DO_DEBUG=1
		;;
    -*)
     printf "Unknown argument received: $1\n" > /dev/stderr;
		 usage 1
    ;;
		*)
		break
		;;
	esac
	shift	
done


# check for deps should be run first
for c in $CHECK; do 
	$c 2>/dev/null 1>/dev/null; test $? -eq 127 && err 1 "Dependency '$c' not present."
done


# Reset unconst vars here
TOMCAT_SECRET_KEY=$( head -c 24 /dev/urandom | xxd -ps )
TEST_DOMAIN="${TEST_DOMAIN:-"taggart.local"}"
LUCEE_PREFIX=${LUCEE_PREFIX:-$PREFIX/lucee}
FILE_BASE=$PREFIX/share/myst/mystinstall
[ $DO_VERBOSE -eq 1 ] && CPFLAGS="-v" || CPFLAGS=


# To automatically install, we'll need to run as root...
if [ $DO_UNPRIVELEGED -eq 0 ]
then
	if [ $UID -ne 0 ]
	then
		printf "`basename $0`: Not root, exiting...\n"
		exit 1	
	fi
fi


# test overrides
if [ 0 -eq 1 ]
then
	HTTPD_LIBDIR=tmp/usr/lib/httpd/modules
	HTTPD_SRVDIR=tmp/srv/http
	HTTPD_CONFDIR=tmp/etc/httpd/conf
	SYSTEMD_LIBDIR=tmp/usr/lib/systemd/system
	#LUCEE_DIR=/opt/lucee
	echo "Running in test mode..."
	mkdir -p $HTTPD_LIBDIR $HTTPD_SRVDIR $HTTPD_CONFDIR/extra $SYSTEMD_LIBDIR 
	cp $CPFLAGS /etc/httpd/conf/httpd.conf $HTTPD_CONFDIR/
	#mkdir -p $LUCEE_DIR $TOMCAT_DIR
fi


# debug
if [ $DO_DUMP -eq 1 ]
then
	printf "HTTPD_LIBDIR:   $HTTPD_LIBDIR\n"
	printf "HTTPD_SRVDIR:   $HTTPD_SRVDIR\n"
	printf "HTTPD_CONFDIR:  $HTTPD_CONFDIR\n"
	printf "SYSTEMD_LIBDIR: $SYSTEMD_LIBDIR\n"
	#printf "LUCEE_DIR:      $LUCEE_DIR\n"
	printf "LUCEE_PREFIX:   $LUCEE_PREFIX\n"
	#echo $TOMCAT_DIR
	exit 0
fi


# Get mutually exclusive
if [ $DO_FULL -eq 1 ]
then
	DO_DOWNLOAD=${DO_DOWNLOAD:-1}
	DO_AUTOMATED=1
fi


# pull down the distribution if asked for
if [ $DO_DOWNLOAD -eq 0 ]
then
	# Simply make the file executable
	LUCEE_DLEXT=run
	chmod +x $TMP_DIR/lucee.$LUCEE_DLEXT
	
else
	# Define things "locally".  Not sure if I can even do this with bash
	DLOUT=
	DLFILE=

	# Grab the latest copies from the website provided address does not change
	DLOUT=$(wget -O - $LUCEE_WWW_DOWNLOAD_HOME 2>/dev/null | \

		# Filter	 
		grep $LUCEE_WWW_CHECKSTRING | \

		# Drill down and just request the URL data (and what it corresponds to) 
		sed '{
			s/\t//g; 
			s/<span.*>//; 
			s/<\/span>//; 
			s/<br>//; 
			s/<div.*><//; 
			s/^<//; 
			s/^a href=//;
			s/"\(.*[^\"]\)*>\([A-Z,a-z,0-9].*\)<\/a>/\1 \2/; s/^"//; 
		}' | \

		# Pretty-print our choices, and allow the user to select one (or have a flag
		#	at the beginning that corresponds to the current order, or a search) 
		awk '{ printf "%-10s\t%s\n", $2, $1 }')
	
	# 'linux-x64' is the version I want for now
	DLFILE=$(echo "$DLOUT" | grep linux-x64 | awk '{ print $2 }')
	LUCEE_DLEXT=$(basename $DLFILE)
	LUCEE_DLEXT=${LUCEE_DLEXT##*.}

	# Grab the file and start the install (or stop, depending on what the user wants)
	# Check for an inaccessible error, we need to handle that...
	wget -O $TMP_DIR/lucee.$LUCEE_DLEXT $DLFILE #2>/dev/null # needs communication
	# ... errors such as file not found, space full, other bull
	chmod +x $TMP_DIR/lucee.$LUCEE_DLEXT
fi



# Try running Lucee's installer, assuming that we start from scratch
# completely 
if [ $DO_AUTOMATED -eq 1 ]
then
	# Gonna check if all of these work
	# all of these options will be prefixed with lucee- in the future
	$TMP_DIR/lucee.$LUCEE_DLEXT \
		--mode unattended \
		--unattendedmodeui minimal \
		--prefix "$LUCEE_PREFIX" \
		--luceepass "${LUCEE_PASS:-""}" \
		--systemuser "${LUCEE_USER:-"http"}" \
		--bittype 64

	# After install is complete, Arch gives me issues with starting the server
	# Do this to mitigate that hopefully
	mkdir -p $LUCEE_PREFIX/jdk/
	ln -s $LUCEE_PREFIX/jre64-lin/jre $LUCEE_PREFIX/jdk/

	# this is a bug and needs to be fixed:
	# Lucee does not fix the ports from cli... at all
	sed -i "{
		s/@@tomcatshutdownport@@/$TOMCAT_SHUTDOWN_PORT/;
		s/@@tomcatport@@/$TOMCAT_PORT/;
		s/@@tomcatajpport@@/$TOMCAT_AJP_PORT/;
		s/@@secretkey@@/$TOMCAT_SECRET_KEY/;
	}" $LUCEE_PREFIX/tomcat/conf/server.xml

	# Installing it this way...?
fi



# This is the service installation, but...
if [ 1 -eq 1 ]
then
	# after pull down has been done and installation was hopefully successful, 
	# check for server.xml and the shared key
	# SHARED_KEY=$( grep "[Ss]hared[Kk]ey" $TOMCAT_DIR/conf/server.xml | sed 's/.*"\(.*\)".*/\1/' )

	# Tomcat may not need to be modified, make sure that AJP is enabled (or try
	# installing without these options and see if there's a way to do it yerself)
	# ....

	# copy the cfml mods file over
	[ $DO_VERBOSE -eq 1 ] && printf "\n* Installing CFML mods file...\n"
	cp $CPFLAGS $FILE_BASE/httpd-cfml.conf $HTTPD_CONFDIR/extra/

	# copy this precompiled shared object into Apache's modules directory
	[ $DO_VERBOSE -eq 1 ] && printf "\n* Installing mod_cfml.so to filesystem...\n"
	cp $CPFLAGS $FILE_BASE/mod_cfml.so $HTTPD_LIBDIR/

	# deploy a host somewhere that Apache can see it
	[ $DO_VERBOSE -eq 1 ] && printf "\n* Installing test host to filesystem...\n"
	cp -r $CPFLAGS $FILE_BASE/taggart.local $HTTPD_SRVDIR/
	chown -R $LUCEE_USER:$LUCEE_USER $HTTPD_SRVDIR/taggart.local

	# modify httpd conf file
	[ $DO_VERBOSE -eq 1 ] && printf "\n* Modifying main Apache config file...\n"
	sed -i '$ a # Include CFML settings in one file' $HTTPD_CONFDIR/httpd.conf
	sed -i '$ a Include conf/extra/httpd-cfml.conf' $HTTPD_CONFDIR/httpd.conf
	sed -i '{
		/User http/User ramar/;
		/Group http/Group ramar/;
		/#LoadModule proxy_module modules\/mod_proxy.so/ s/^#//;
		/#LoadModule proxy_connect_module modules\/mod_proxy_connect.so/ s/^#//;
		/#LoadModule proxy_http_module modules\/mod_proxy_http.so/ s/^#//;
		/#LoadModule proxy_ajp_module modules\/mod_proxy_ajp.so/ s/^#//;
		/#LoadModule rewrite_module modules\/mod_rewrite.so/ s/^#//;
		/#Include conf\/extra\/httpd-vhosts.conf/ s/^#//;
	}' $HTTPD_CONFDIR/httpd.conf

	# modify httpd-cfml.conf
	[ $DO_VERBOSE -eq 1 ] && printf "\n* Updating shared keys for mod CFML...\n"
	sed -i "s/__MY_SHARED_KEY__/$TOMCAT_SECRET_KEY/" $HTTPD_CONFDIR/extra/httpd-cfml.conf

	# modify the virtual host file
	[ $DO_VERBOSE -eq 1 ] && printf "\n* Adding test host...\n"
	sed "{ s/__DOMAIN_NAME__/$TEST_DOMAIN/; s/__DOMAIN_ALIAS__/taggart.local/; }" \
		$FILE_BASE/testhost.conf >> $HTTPD_CONFDIR/extra/httpd-vhosts.conf

	# add a file called tattest.html too, b/c somehow there was no it works doc
	cp $FILE_BASE/tattest.html $HTTPD_SRVDIR/	

	# probably should check for any syntax errors
	httpd -t || {
		printf "`basename $0`: Syntax check failed...\n"
		exit 0
	}
fi



# Mess with systemd (I don't strictly need this if doing something)
if [ 1 -eq 1 ]
then
	# copy a modified version of the lucee.service file to systemd's directory
	[ $DO_VERBOSE -eq 1 ] && printf "\n* Installing lucee.service to filesystem...\n"
	sed "s#__LUCEE_DIR__#$LUCEE_PREFIX#" $FILE_BASE/lucee.service > $SYSTEMD_LIBDIR/lucee.service

	# modify lucee.service file
	#[ $DO_VERBOSE -eq 1 ] && printf "\n* Updating systemctl unit for Lucee...\n"
	# cp $CPFLAGS $FILE_BASE/lucee.service $SYSTEMD_LIBDIR/
	#sed -i "s/__LUCEE_USER__/$LUCEE_USER/" $SYSTEMD_LIBDIR/lucee.service
	#sed -i "s/__LUCEE_GROUP__/$LUCEE_GROUP/" $SYSTEMD_LIBDIR/lucee.service

	# may need to reload files after this change
	systemctl daemon-reload

	# restart and test
	systemctl start httpd
	systemctl start lucee

	# finally, enable both services to start by default
	# systemctl enable httpd
	# systemctl enable lucee
fi



# Do a local network test with a hostname defined in /etc/hosts
if [ 0 -eq 1 ]
then
	# does a network test to see if the gear works
	# should temporarily add names to /etc/hosts
	# printf "127.0.0.1 taggart.local # CFML-TEST-HOST \n" >> /etc/hosts

	# check if they worked (a request ought to do)
	# all I need to do is check the headers and find a 200
	# a head request will make it even faster
	# wget -O - http://taggart.local/ > /dev/null 

	# remove the name
	# sed -i '/CFML-TEST-HOST/d' /etc/hosts
	printf ''>/dev/null
fi
