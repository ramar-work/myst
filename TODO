- change your banner, you are no longer Deep909, LLC
	make it a script that runs with your kit...


- what is the end goal of additional tools?
	1. make new projects easily
	2. get them closer to completion more quickly through more efficient means:
		- creating api backends more quickly, heavy logic is rare
		- modifying and adding routes, error prone by hand and i often know what to
		  do first
		- creating tests and test frameworks (do things automatically)
		- generating all the files or components you need along with some degree of
		  scaffolding since it's CFML after all...

	2a. what's the best answer to that?
		- full data.cfm files are key to things working properly
		- perhaps, parsing data.cfm is the quickest answer to getting things working

	2b. making components
		- cfml comes iwth nothing by default, so you'll have to write something
		  smart
		- i hate file conversions, but that might be the trick to get started anyway

	shell is my first choice, but it sucks, so...
	java is the most appropriate choice seeing as though this is a Java based tool
	but C is what I know best and I have tools to handle this... in a few dialects


- make api:
		by supplying jSON
		by supplying file
		by checking out a database and generating the rules


- anyway to quickly bang out api endpoints?
		...?

	
- think more about components
		$C.loadToHtml - can make a form (provided all the details are laid out)
			the most solid way to do things like this is using a template...
			spitting out html is almost always error prone
		$C.apiEndpoint - eat values the same way, but hmmm
		$C.createDB - this isn't the best solution, but with the right things can
			probably work  	


- ORM, learn it and try it out


- datasource tools
		this.datasources["myds"] = {
			 // required
			type: 'mysql'
			, host: 'localhost'
			, database: 'test'
			, port: 3306
			, username: 'root'
			, password: "encrypted:5120611ea34c6123fd85120a0c27ab23fd81ea34cb854"
			// optional
			, connectionLimit: -1 // how many connections are allowed maximal (-1 == infiniti)
			, connectionTimeout:1 // connection timeout in minutes (0 == connection is released after usage)
			, blob: false // enable blob
			, clob: false // enable clob
			, storage: false // allow to use this datasource as a session/application storage
			, timezone: 'CET'  // if set Lucee change the environment timezone
			, custom: {useUnicode:true,characterEncoding:'UTF-8'} // a struct that contains type specific settings
		};

- embedded db's
		deploy to them
		switch to SQL (via ORM)

- apps
		static data
		routes
		css
		components
		
- application load stuff
		components as global (coldmvc.x etc)
	
