- you are Tubular Modular!
	and this is one of your tools/projects


- mystmod could really use 2 mods:
		cms (even a super basic shitty one...)
		oauth (the beginning of pretty much any module that needs oauth support)
		

- add --scaff[olding] option to make generating new sites really quick
		by checking out a database and generating the rules


- add a --datasource-make option to generate components (that can be turned into
  real backends very quickly)  this could also be mystdb


- components should stricly output data (no markup)


- add the query choice to mvc object, bypasses any file inclusion and just calls
  either raw sql or the files...


- languages for shell evaluation (right now, sh or bash will work)
		js works too b/c of duktape
		lua is always nice, and fairly easy to embed (but it has to be built,
			duktape is far simpler)
		some jvm language should work too, not sure which is best..
 

- ORM, learn it and try it out


- datasource tools
		this.datasources["myds"] = {
			 // required
			type: 'mysql'
			, host: 'localhost'
			, database: 'test'
			, port: 3306
			, username: 'root'
			, password: "encrypted:5120611ea34c6123fd85120a0c27ab23fd81ea34cb854"
			// optional
			, connectionLimit: -1 // how many connections are allowed maximal (-1 == infiniti)
			, connectionTimeout:1 // connection timeout in minutes (0 == connection is released after usage)
			, blob: false // enable blob
			, clob: false // enable clob
			, storage: false // allow to use this datasource as a session/application storage
			, timezone: 'CET'  // if set Lucee change the environment timezone
			, custom: {useUnicode:true,characterEncoding:'UTF-8'} // a struct that contains type specific settings
		};


- myst component work (eveything should be local, luckily it's very easy to see
  what's local and not via make_index)


- convert everything to camelCase, it's less ugly with Java based tools.... for
  some reason...


- Can CF handle UDP?


	
